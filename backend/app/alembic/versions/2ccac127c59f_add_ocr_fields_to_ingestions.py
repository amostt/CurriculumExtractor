"""add_ocr_fields_to_ingestions

Revision ID: 2ccac127c59f
Revises: 1a31ce608336
Create Date: 2025-10-30 13:42:07.183819

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '2ccac127c59f'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('ingestions',
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('status', sa.Enum('UPLOADED', 'OCR_PROCESSING', 'OCR_COMPLETE', 'SEGMENTATION_PROCESSING', 'SEGMENTATION_COMPLETE', 'TAGGING_PROCESSING', 'DRAFT', 'IN_REVIEW', 'APPROVED', 'REJECTED', 'FAILED', name='extractionstatus'), nullable=False),
    sa.Column('ocr_provider', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('ocr_processed_at', sa.DateTime(), nullable=True),
    sa.Column('ocr_processing_time', sa.Float(), nullable=True),
    sa.Column('ocr_cost', sa.Float(), nullable=True),
    sa.Column('ocr_average_confidence', sa.Float(), nullable=True),
    sa.Column('ocr_storage_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('presigned_url', sqlmodel.sql.sqltypes.AutoString(length=2048), nullable=False),
    sa.Column('storage_path', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingestions_owner_id'), 'ingestions', ['owner_id'], unique=False)
    # Add performance indexes for OCR fields (per PRD requirements)
    op.create_index('idx_ingestions_status', 'ingestions', ['status'], unique=False)
    op.create_index('idx_ingestions_ocr_processed_at', 'ingestions', ['ocr_processed_at'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_ingestions_ocr_processed_at', table_name='ingestions')
    op.drop_index('idx_ingestions_status', table_name='ingestions')
    op.drop_index(op.f('ix_ingestions_owner_id'), table_name='ingestions')
    op.drop_table('ingestions')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###

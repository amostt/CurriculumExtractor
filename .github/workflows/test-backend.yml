name: Test Backend

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.4.15"
          enable-cache: true
      - name: Clean up docker
        run: docker compose down -v --remove-orphans
        env:
          REDIS_PASSWORD: test-redis-password
      # Start Redis and MailCatcher (no local DB - using Supabase)
      - name: Start services
        run: docker compose up -d redis mailcatcher
        env:
          REDIS_PASSWORD: test-redis-password
      - name: Run tests
        run: uv run bash scripts/tests-start.sh "Coverage for ${{ github.sha }}"
        working-directory: backend
        env:
          # Test environment uses in-memory SQLite
          # Tests should mock Supabase connections
          DATABASE_URL: sqlite:///./test.db
          SUPABASE_URL: https://test.supabase.co
          SUPABASE_ANON_KEY: test-anon-key
          SUPABASE_SERVICE_KEY: test-service-key
          REDIS_URL: redis://:test@redis:6379/0
          REDIS_PASSWORD: test-redis-password
          CELERY_BROKER_URL: redis://:test@redis:6379/0
          CELERY_RESULT_BACKEND: redis://:test@redis:6379/0
          SECRET_KEY: test-secret-key-for-ci
          FIRST_SUPERUSER: test@example.com
          FIRST_SUPERUSER_PASSWORD: test-password
      - name: Cleanup
        run: docker compose down -v --remove-orphans
        env:
          REDIS_PASSWORD: test-redis-password
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: backend/htmlcov
          include-hidden-files: true

name: Test Backend

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test-backend:
    runs-on: ubuntu-latest

    # PostgreSQL and Redis service containers for production-parity testing
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Create dummy .env file
        run: touch .env
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.5"
          enable-cache: true
      - name: Install backend dependencies
        run: uv sync --dev
        working-directory: backend
        env:
          # Required for Settings validation
          PROJECT_NAME: CurriculumExtractor
          ENVIRONMENT: testing
          # Use PostgreSQL service container for production-parity testing
          DATABASE_URL: postgresql+psycopg://postgres:testpassword@localhost:5432/test
          SUPABASE_URL: https://test.supabase.co
          SUPABASE_ANON_KEY: test-anon-key
          SUPABASE_SERVICE_KEY: test-service-key
          REDIS_URL: redis://localhost:6379/0
          REDIS_PASSWORD: test-redis-password
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
          SECRET_KEY: test-secret-key-for-ci
          FIRST_SUPERUSER: admin@example.com
          FIRST_SUPERUSER_PASSWORD: test-password
          EMAILS_FROM_EMAIL: noreply@test.example.com
      - name: Alembic check and migrate
        run: |
          uv run alembic check
          uv run alembic upgrade head
        working-directory: backend
        env:
          PROJECT_NAME: CurriculumExtractor
          ENVIRONMENT: testing
          DATABASE_URL: postgresql+psycopg://postgres:testpassword@localhost:5432/test
          SUPABASE_URL: https://test.supabase.co
          SUPABASE_ANON_KEY: test-anon-key
          SUPABASE_SERVICE_KEY: test-service-key
          REDIS_URL: redis://localhost:6379/0
          REDIS_PASSWORD: test-redis-password
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
          SECRET_KEY: test-secret-key-for-ci
          FIRST_SUPERUSER: admin@example.com
          FIRST_SUPERUSER_PASSWORD: test-password
          EMAILS_FROM_EMAIL: noreply@test.example.com

      - name: Run tests (coverage)
        run: uv run bash scripts/test.sh "Coverage for ${{ github.sha }}"
        working-directory: backend
        env:
          PROJECT_NAME: CurriculumExtractor
          ENVIRONMENT: testing
          DATABASE_URL: postgresql+psycopg://postgres:testpassword@localhost:5432/test
          SUPABASE_URL: https://test.supabase.co
          SUPABASE_ANON_KEY: test-anon-key
          SUPABASE_SERVICE_KEY: test-service-key
          REDIS_URL: redis://localhost:6379/0
          REDIS_PASSWORD: test-redis-password
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
          SECRET_KEY: test-secret-key-for-ci
          FIRST_SUPERUSER: admin@example.com
          FIRST_SUPERUSER_PASSWORD: test-password
          EMAILS_FROM_EMAIL: noreply@test.example.com
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: backend/htmlcov
          include-hidden-files: true

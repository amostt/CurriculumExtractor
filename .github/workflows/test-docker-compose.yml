name: Test Docker Compose

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:

  test-docker-compose:
    runs-on: ubuntu-latest
    env:
      # CI environment variables (Supabase requires real credentials or mocking)
      DATABASE_URL: postgresql://test:test@localhost:5432/test
      SUPABASE_URL: https://test.supabase.co
      SUPABASE_ANON_KEY: test-anon-key
      SUPABASE_SERVICE_KEY: test-service-key
      REDIS_PASSWORD: test-redis-password
      REDIS_URL: redis://:test-redis-password@redis:6379/0
      CELERY_BROKER_URL: redis://:test-redis-password@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:test-redis-password@redis:6379/0
      SECRET_KEY: test-secret-key-minimum-length-32-chars
      FIRST_SUPERUSER: test@example.com
      FIRST_SUPERUSER_PASSWORD: test-password-123
      # Docker compose required variables
      DOMAIN: test.example.com
      FRONTEND_HOST: http://localhost:5173
      STACK_NAME: curriculum-extractor-test
      # Optional variables (can be blank)
      ENVIRONMENT: testing
      BACKEND_CORS_ORIGINS: http://localhost:5173
      SMTP_HOST: ""
      SMTP_USER: ""
      SMTP_PASSWORD: ""
      EMAILS_FROM_EMAIL: noreply@test.example.com
      SENTRY_DSN: ""
      # Docker image names
      DOCKER_IMAGE_BACKEND: backend
      DOCKER_IMAGE_FRONTEND: frontend
      TAG: latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Create dummy .env file
        run: touch .env
      - name: Validate docker compose config
        run: docker compose config -q
      - name: Build all services
        run: docker compose build
      - name: Verify images were built
        run: |
          docker images --format "{{.Repository}}:{{.Tag}}" | grep -E "(backend|frontend)"
          echo "âœ… All Docker images built successfully"
